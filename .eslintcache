[{"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\index.js":"1","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\App.js":"2","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\reportWebVitals.js":"3","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\store.jsx":"4","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\index.jsx":"5","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\middleware\\loggerMiddleware.jsx":"6","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\middleware\\thunk.jsx":"7","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\reducers\\index.jsx":"8","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\Login.jsx":"9","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\History.jsx":"10","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\Home.jsx":"11","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\Scan.jsx":"12","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\NewPackage.jsx":"13","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\Dashboard.jsx":"14","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\NewPackageDesc.jsx":"15","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\CustomerPackages.jsx":"16","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\reducers\\errorReducer.jsx":"17","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\reducers\\packageReducer.jsx":"18","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\reducers\\userReducer.jsx":"19","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\components\\MainBarcodeScanner.js":"20","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\config\\config.jsx":"21","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\helpers\\dateConvert.jsx":"22","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\helpers\\serverInteraction.jsx":"23","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\actions\\actions.jsx":"24","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\components\\index.jsx":"25","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\dbr.js":"26","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\components\\BarcodeScanner.js":"27","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\components\\Navbar.jsx":"28"},{"size":733,"mtime":1607920357239,"results":"29","hashOfConfig":"30"},{"size":510,"mtime":1608109522517,"results":"31","hashOfConfig":"30"},{"size":375,"mtime":1607920357242,"results":"32","hashOfConfig":"30"},{"size":286,"mtime":1607920357245,"results":"33","hashOfConfig":"30"},{"size":408,"mtime":1607920357242,"results":"34","hashOfConfig":"30"},{"size":200,"mtime":1607920357244,"results":"35","hashOfConfig":"30"},{"size":316,"mtime":1607920357244,"results":"36","hashOfConfig":"30"},{"size":215,"mtime":1607920357245,"results":"37","hashOfConfig":"30"},{"size":2933,"mtime":1608109764001,"results":"38","hashOfConfig":"30"},{"size":2821,"mtime":1608110132255,"results":"39","hashOfConfig":"30"},{"size":1329,"mtime":1608109507331,"results":"40","hashOfConfig":"30"},{"size":1037,"mtime":1608109807068,"results":"41","hashOfConfig":"30"},{"size":3796,"mtime":1608115938778,"results":"42","hashOfConfig":"30"},{"size":3179,"mtime":1608104990770,"results":"43","hashOfConfig":"30"},{"size":2734,"mtime":1608106448120,"results":"44","hashOfConfig":"30"},{"size":3186,"mtime":1608108801181,"results":"45","hashOfConfig":"30"},{"size":318,"mtime":1607920357244,"results":"46","hashOfConfig":"30"},{"size":604,"mtime":1608006408079,"results":"47","hashOfConfig":"30"},{"size":550,"mtime":1608006408079,"results":"48","hashOfConfig":"30"},{"size":3163,"mtime":1608013908739,"results":"49","hashOfConfig":"30"},{"size":46,"mtime":1607920357237,"results":"50","hashOfConfig":"30"},{"size":1097,"mtime":1608108064521,"results":"51","hashOfConfig":"30"},{"size":2897,"mtime":1608098479963,"results":"52","hashOfConfig":"30"},{"size":893,"mtime":1608006408078,"results":"53","hashOfConfig":"30"},{"size":44,"mtime":1607920357236,"results":"54","hashOfConfig":"30"},{"size":327,"mtime":1607920357237,"results":"55","hashOfConfig":"30"},{"size":2801,"mtime":1608013946613,"results":"56","hashOfConfig":"30"},{"size":1335,"mtime":1608109483248,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1da5t5l",{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\index.js",[],["125","126"],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\App.js",["127","128","129","130","131"],"import './App.css';\r\nimport './style/css/main.css'\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport {useState} from 'react'\r\nimport {Login, Home} from './pages/'\r\n\r\nfunction App() {\r\n\r\n  const access_token = localStorage.getItem('access_token')\r\n\r\n  return (\r\n    <Switch>\r\n\r\n      <Route path=\"/login\">\r\n      <Login />\r\n      </Route>\r\n\r\n      <Route path=\"/\">\r\n        <Home />\r\n      </Route>\r\n\r\n    </Switch>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\reportWebVitals.js",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\store.jsx",["132"],"import { createStore, applyMiddleware } from 'redux'\r\nimport { thunk } from './middleware/thunk'\r\nimport { loggerMiddleware } from './middleware/loggerMiddleware'\r\nimport reducer from './reducers/index'\r\n\r\nlet store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\index.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\middleware\\loggerMiddleware.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\middleware\\thunk.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\reducers\\index.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\Login.jsx",["133"],"import React, { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport { baseURL } from \"../config/config\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  setLoginErr,\r\n  setLoginSuccess,\r\n} from \"../store/actions/actions\"\r\nimport logo from '../assets/logo.png'\r\n// import { userLogin } from \"../helpers/serverInteraction\"\r\nimport {} from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const { loginSuccess } = useSelector((state) => state.user)\r\n  const { loginErrMsg } = useSelector((state) => state.error)\r\n  const [userInput, setUserInput] = useState({ email: \"\", password: \"\" })\r\n\r\n  useEffect(() => {}, [])\r\n\r\n  function handleInputChange(e) {\r\n    let key = e.target.name\r\n    let value = e.target.value\r\n    dispatch(setLoginErr(false))\r\n    setUserInput({ ...userInput, [key]: value })\r\n  }\r\n\r\n  function userLogin() {\r\n    console.log()\r\n    axios({\r\n      baseURL,\r\n      url: \"/login-admin\",\r\n      method: \"POST\",\r\n      data: userInput,\r\n    })\r\n      .then(({ data }) => {\r\n        console.log(data, \"<< data from userLogin\")\r\n        dispatch(setLoginSuccess(true))\r\n        dispatch(setLoginErr(\"\"))\r\n        const { access_token } = data\r\n        localStorage.setItem(\"access_token\", access_token)\r\n        history.push(\"/\")\r\n      })\r\n      .catch(({ response }) => {\r\n        dispatch(setLoginErr(response.data.msg))\r\n      })\r\n  }\r\n\r\n  function handleLogin(e) {\r\n    e.preventDefault()\r\n    // console.log(userInput)\r\n    userLogin()\r\n    // dispatch(userLogin(userInput))\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-container p-20 flex justify-center\">\r\n      <div className=\"flex flex-col w-1/2 border p-10 rounded shadow-md\">\r\n        <div className=\"flex justify-center\">\r\n\r\n           <img className=\"login-logo\" src={logo} alt=\"Better Letter Logos\"/>\r\n        </div>\r\n\r\n        <div>\r\n          <h1 className=\"text-center text-header p-10\">Better Letter Admin Login</h1>\r\n        </div>\r\n        <div className=\"w-full\">\r\n          <form onSubmit={handleLogin} className=\"flex flex-col\">\r\n            <input\r\n              className=\"form-input\"\r\n              onChange={handleInputChange}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter your Email Address\"\r\n            />\r\n            <input\r\n              className=\"form-input\"\r\n              onChange={handleInputChange}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter your Password\"\r\n            />\r\n\r\n            {loginErrMsg ? <p className=\"error-text\">{loginErrMsg}</p> : \"\"}\r\n            <input\r\n              className=\"btn-login mt-5 py-3 rounded\"\r\n              type=\"submit\"\r\n              value=\"Login\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\History.jsx",["134","135"],"import { useState, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { fetchPackages } from \"../helpers/serverInteraction\"\r\nimport { getDateTime } from \"../helpers/dateConvert\"\r\n\r\nexport default function History() {\r\n  const dispatch = useDispatch()\r\n  const { packages } = useSelector((state) => state.packages)\r\n  const [filter, setFilter] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if (packages.length === 0) {\r\n      dispatch(fetchPackages())\r\n    }\r\n  }, [])\r\n\r\n  const claimedPackages = () => {\r\n    return packages.filter((el) => el.claimed === true)\r\n  }\r\n\r\n  function handleSelect(e) {\r\n    setFilter(e.target.value)\r\n  }\r\n\r\n  function filterPackage() {\r\n    if (filter === \"all\" || filter === \"\") {\r\n      return packages.filter((el) => el)\r\n    } else if (filter === \"claimed\") {\r\n      return packages.filter((el) => el.claimed === true)\r\n    } else if (filter === \"unclaimed\") {\r\n      return packages.filter((el) => el.claimed === !true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-start align-start h-screen px-12 py-16\">\r\n      <div className=\"w-full flex flex-row\">\r\n        <h1 className=\"text-header\">Packages</h1>\r\n      </div>\r\n      <div className=\"flex flex-col align-center mt-2 \">\r\n        <h1 className=\"text-h2 mr-4\">Filter by</h1>\r\n        <select\r\n          className=\"w-4/5 py-1 border rounded package-filter\"\r\n          onChange={handleSelect}\r\n        >\r\n          <option value=\"all\">All</option>\r\n          <option value=\"claimed\">Claimed</option>\r\n          <option value=\"unclaimed\">Unclaimed</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"flex flex-col w-4/5 mt-4 h-screen overflow-y-scroll\">\r\n        <table className=\"w-full border text-center\">\r\n          <thead>\r\n            <tr className=\"bg-gray-700 text-white\">\r\n              <th className=\"py-4\">Name</th>\r\n              <th>Unit</th>\r\n              <th>Description</th>\r\n              <th>Received by</th>\r\n              {filter === \"claimed\" ? <th>Claimed at</th> : \"\"}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filterPackage()?.map((item, index) => {\r\n              return (\r\n                <tr\r\n                  key={index}\r\n                  className={index % 2 === 0 ? \"bg-gray-100\" : \"bg-white\"}\r\n                >\r\n                  <td>{item.User.name}</td>\r\n                  <td>{item.User.unit}</td>\r\n                  <td>{item.description}</td>\r\n                  <td>{item.receiver}</td>\r\n                  {filter === \"claimed\" ? (\r\n                    <td>{getDateTime(item.updatedAt)}</td>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\Home.jsx",["136","137"],"import React, { useEffect } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Navbar } from \"../components\"\r\nimport {\r\n  Dashboard,\r\n  History,\r\n  NewPackage,\r\n  Scan,\r\n  CustomerPackages,\r\n  NewPackageDesc,\r\n} from \"./index\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport default function Home() {\r\n  const { packages } = useSelector((state) => state.packages)\r\n  const { users } = useSelector((state) => state.user)\r\n\r\n  useEffect(() => {\r\n    console.log(users, \"<<< users\")\r\n    console.log(packages)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"flex flex-row h-screen\">\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n\r\n      <div className=\"w-full main-content\">\r\n        <Switch>\r\n          <Route path=\"/history\">\r\n            <History />\r\n          </Route>\r\n\r\n          <Route path=\"/new/:userId\">\r\n            <NewPackageDesc />\r\n          </Route>\r\n          <Route path=\"/new\">\r\n            <NewPackage />\r\n          </Route>\r\n\r\n          <Route path=\"/scan\">\r\n            <Scan />\r\n          </Route>\r\n\r\n          <Route path=\"/customer-packages/:UserId\">\r\n            <CustomerPackages />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\Scan.jsx",["138","139","140","141"],"import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport MainBarcodeScanner from '../components/MainBarcodeScanner'\r\nimport { fetchUsers } from '../helpers/serverInteraction'\r\n\r\n\r\nexport default function Scan() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { packages } = useSelector((state) => state.packages)\r\n\r\n  function navigateTo(path) {\r\n    history.push(path)\r\n  }\r\n\r\n  /* useEffect(() => {\r\n    dispatch(fetchUsers())\r\n  }, []) */\r\n\r\n  return(\r\n    <div className=\"w-4/5 main-content rounded-tl-lg bg-white\">\r\n\r\n      <div className=\"flex flex-col justify-start items-center h-screen px-8 py-16\">\r\n        <div>\r\n          <h1 className=\"text-header\">Scan Resident's QR Code</h1>\r\n\r\n          <MainBarcodeScanner navigateTo={navigateTo}/>\r\n        </div>\r\n        {/* <button className=\"btn-1 mt-2\" onClick={() => navigateTo('/customer-packages/2')}>Tidak Scan</button> */}\r\n      </div>\r\n    \r\n  </div>\r\n  )\r\n}","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\NewPackage.jsx",["142","143"],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\Dashboard.jsx",["144","145","146"],"import { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { fetchPackages, fetchUsers } from \"../helpers/serverInteraction\"\r\nimport { getDateTime, getDate } from \"../helpers/dateConvert\"\r\nimport btnIn from '../assets/btn-in.png'\r\nimport qrLogo from '../assets/btn-qr.png'\r\n\r\nexport default function Dashboard() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { packages } = useSelector((state) => state.packages)\r\n  useEffect(() => {\r\n    dispatch(fetchPackages())\r\n    dispatch(fetchUsers())\r\n  }, [])\r\n\r\n  const unclaimedPackages = () => {\r\n    return packages.filter((el) => el.claimed === false)\r\n  }\r\n\r\n  const receivedToday = () => {\r\n    return packages.filter(el => getDate(el.createdAt) === getDate(new Date())).length\r\n  }\r\n  const claimedToday = () => {\r\n    return packages.filter(el => getDate(el.createdAt) === getDate(new Date()) && el.claimed).length\r\n  }\r\n\r\n  const unclaimed = () => {\r\n    return packages.filter(el => !el.claimed).length\r\n  }\r\n\r\n  console.log(packages, '<<< ini packages di dashboard')\r\n  function navigateTo(path) {\r\n    history.push(path)\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-start align-start h-screen px-12 py-40\">\r\n      \r\n      <div>\r\n        <h1 className=\"text-header\">Hello, Admin!</h1>\r\n      </div>\r\n\r\n      \r\n      <div className=\"mt-5 mb-1 flex flex-col\">\r\n        <h2 className=\"text-sub-header\">Statistics</h2>\r\n\r\n        <div className=\"summary-box mt-4 flex flex-row justify-around\">\r\n\r\n          <div className=\"summary-box-text flex flex-col justify-center items-center\">\r\n            <h1 className=\"summary-box-text-header\">{receivedToday()}</h1>\r\n            <p className=\"summary-box-text-slug\">Received Today</p>\r\n          </div>\r\n          <div className=\"summary-box-text flex flex-col justify-center items-center\">\r\n          <h1 className=\"summary-box-text-header\">{claimedToday()}</h1>\r\n            <p className=\"summary-box-text-slug\">Claimed Today</p>\r\n          </div>\r\n          <div className=\"summary-box-text flex flex-col justify-center items-center\">\r\n          <h1 className=\"summary-box-text-header\">{unclaimed()}</h1>\r\n            <p className=\"summary-box-text-slug\">Unclaimed Packages</p>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"w-full flex flex-col mt-5\">\r\n        <h2 className=\"text-sub-header\">Actions</h2>\r\n\r\n        <div className=\"button-group flex flex-row mt-4\">\r\n\r\n          <button onClick={() => navigateTo(\"/new\")} className=\"btn-large-action transform  transition hover:scale-105 flex flex-col items-center\">\r\n            <img src={btnIn} alt=\"New Package\" className=\"btn-image\"/>\r\n            <p className=\"btn-text mt-2\">Add New Package</p>\r\n          </button>\r\n\r\n          <button onClick={() => navigateTo(\"/scan\")} className=\"btn-large-action transform  transition hover:scale-105 flex flex-col items-center\">\r\n <img src={qrLogo} alt=\"New Package\" className=\"btn-image\"/>\r\n            <p className=\"btn-text mt-2\">Scan QR</p>\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\NewPackageDesc.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\pages\\CustomerPackages.jsx",["147","148","149"],"import { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { getDateTime, getMomentDate } from \"../helpers/dateConvert\"\r\nimport { claimPackage } from \"../helpers/serverInteraction\"\r\nimport btnOut from \"../assets/btn-out.png\"\r\n\r\nexport default function CustomerPackages() {\r\n  const { UserId } = useParams()\r\n  const { users } = useSelector((state) => state.user)\r\n  const { packages } = useSelector((state) => state.packages)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    console.log(packages, \"<< packages in customerPackages\")\r\n    console.log(users, \"<< users in customerPackages\")\r\n  }, [])\r\n\r\n  function handleClaimPackage() {\r\n    claimPackage(UserId)\r\n      .then(({ data }) => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  function filterUser() {\r\n    if (users) {\r\n      return users.find((user) => user.id === +UserId)\r\n    }\r\n    return { name: \"customer\", unit: \"unit\" }\r\n  }\r\n\r\n  function filterPackage() {\r\n    return packages.filter(\r\n      (userPackage) => userPackage.UserId === +UserId && !userPackage.claimed\r\n    )\r\n  }\r\n\r\n  if (packages && filterPackage().length === 0) {\r\n    return (\r\n      <div className=\"w main-content px-12 pt-40 bg-white\">\r\n        <div className=\"pb-10\">\r\n          <h1 className=\"text-header\">\r\n            No New Packages for{\" \"}\r\n            <span>\r\n              {filterUser().name}, {filterUser().unit}\r\n            </span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"w main-content px-12 pt-16 bg-white\">\r\n      <div className=\"pb-10\">\r\n        <h1 className=\"text-header\">\r\n          Get Packages for{\" \"}\r\n          <span>\r\n            {filterUser().name}, {filterUser().unit}\r\n          </span>\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"flex flex-row \">\r\n        <div className=\"\">\r\n          <button\r\n            onClick={handleClaimPackage}\r\n            className=\"btn-large-action transform  transition hover:scale-105 flex flex-col items-center\"\r\n          >\r\n            <img src={btnOut} alt=\"New Package\" className=\"btn-image\" />\r\n            <p className=\"btn-text mt-2\">Get All Packages</p>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"packages-container ml-5\">\r\n          {packages &&\r\n            filterPackage().map((userPackage, index) => (\r\n              <div key={index} className=\"package-card mb-2\">\r\n                <div className=\"flex justify-between flex-row items-center\">\r\n                  <h1 className=\"package-card-title\">{userPackage.sender}</h1>\r\n                  <p className=\"package-card-moment\">\r\n                    {getMomentDate(userPackage.createdAt)}\r\n                  </p>\r\n                </div>\r\n                <p className=\"package-card-description\">\r\n                  {userPackage.description}\r\n                </p>\r\n                <p className=\"package-card-receivedBy\">\r\n                  Received by : {userPackage.receiver}\r\n                </p>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    \r\n    </div>\r\n  )\r\n}\r\n","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\reducers\\errorReducer.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\reducers\\packageReducer.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\reducers\\userReducer.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\components\\MainBarcodeScanner.js",["150"],"import DBR from \"../dbr\";\r\nimport React from 'react';\r\nimport BarcodeScanner from './BarcodeScanner';\r\n\r\nclass MainBarcodeScanner extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.reader = null;\r\n    this.refDivMessage = React.createRef();\r\n    this.state = {\r\n      messageKeyBase: 0,\r\n      message: '',\r\n      bShowScanner: true\r\n    };\r\n  }\r\n  componentDidUpdate(){\r\n    //this.refDivMessage.current.scrollTop = this.refDivMessage.current.scrollHeight;\r\n  }\r\n  componentWillUnmount(){\r\n    if(this.reader){\r\n      this.reader.destroy();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        { !this.state.bShowScanner ? (\r\n          <div>\r\n            {/* Choose image(s) to decode:\r\n            <input onChange={this.onIptChange} type=\"file\" multiple accept=\"image/png,image/jpeg,image/bmp,image/gif\" />\r\n            <br/><br/> */}\r\n            <button className=\"btn-large\" onClick={this.showScanner}>show scanner</button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {/* <button className=\"btn-large\" onClick={this.hideScanner}>hide scanner</button> */}\r\n            <BarcodeScanner appendMessage={this.appendMessage}></BarcodeScanner>\r\n          </div>\r\n        ) }\r\n    \r\n        {/* <div className=\"div-message\" style={style.div_message} ref={this.refDivMessage}>\r\n          { this.state.messages.map((message, index) => \r\n            <p key={ this.state.messageKeyBase + index }>\r\n              { message }\r\n            </p>\r\n          ) }\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n  appendMessage = str => {\r\n    this.setState(state=>{\r\n      state.message = str;\r\n      /* if(state.messages.length > 500){\r\n        ++state.messageKeyBase;\r\n        state.messages.splice(0, 1);\r\n      } */\r\n      console.log(state, '<<< isi state')\r\n      state.bShowScanner = false\r\n      this.props.navigateTo(`/customer-packages/${state.message}`)\r\n      return state;\r\n    });\r\n  }\r\n  onIptChange = event=>{\r\n      // React can't get event.target in async func by default.\r\n      // Thus get event.target in sync part.\r\n    let input = event.target;\r\n    (async ()=>{\r\n      try{\r\n        this.appendMessage(\"======== start read... ========\");\r\n        let reader = this.reader = this.reader || await DBR.BarcodeReader.createInstance();\r\n        let files = input.files;\r\n        for(let i = 0; i < files.length; ++i){\r\n          let file = files[i];\r\n          this.appendMessage(file.name + ':')\r\n          let results = await reader.decode(file);\r\n          for(let result of results){\r\n            this.appendMessage(result.barcodeText);\r\n          }\r\n        }\r\n        input.value = \"\";\r\n        this.appendMessage(\"======== finish read ========\");\r\n      }catch(ex){\r\n        this.appendMessage(ex.message);\r\n        console.error(ex);\r\n      }\r\n    })();\r\n  }\r\n  showScanner = ()=>{\r\n    this.setState({\r\n      bShowScanner: true\r\n    });\r\n  }\r\n  hideScanner = ()=>{\r\n    this.setState({\r\n      bShowScanner: false\r\n    });\r\n  }\r\n}\r\n\r\nconst style = {\r\n  div_message: {\r\n    maxHeight: \"200px\",\r\n    overflowY: \"auto\",\r\n    resize: \"both\"\r\n  }\r\n}\r\n\r\nexport default MainBarcodeScanner;\r\n","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\config\\config.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\helpers\\dateConvert.jsx",["151","152"],"import moment from 'moment'\r\n\r\nexport function getDateTime(value) {\r\n  const dateObj = new Date(value)\r\n  const month = dateObj.getUTCMonth() + 1 //months from 1-12\r\n  const day = dateObj.getUTCDate()\r\n  const year = dateObj.getUTCFullYear()\r\n  const time = dateObj.toLocaleTimeString()\r\n\r\n  const newdate = `${year} / ${month} / ${day} - ${time}`\r\n\r\n  return newdate\r\n}\r\n\r\n\r\nexport function getDate(value) {\r\n  const dateObj = new Date(value)\r\n  const month = dateObj.getUTCMonth() + 1 //months from 1-12\r\n  const day = dateObj.getUTCDate()\r\n  const year = dateObj.getUTCFullYear()\r\n  const time = dateObj.toLocaleTimeString()\r\n\r\n  const newdate = `${year} / ${month} / ${day}`\r\n\r\n  return newdate\r\n}\r\n\r\nexport function getMomentDate(value) {\r\n  const dateObj = new Date(value)\r\n  const month = dateObj.getUTCMonth() + 1 //months from 1-12\r\n  const day = dateObj.getUTCDate()\r\n  const year = dateObj.getUTCFullYear()\r\n  const time = dateObj.toLocaleTimeString()\r\n\r\n  const newdate = `${year}${month}${day}`\r\n\r\n  const momentDate = moment(newdate, 'YYYYMMDD').fromNow()\r\n\r\n  return momentDate\r\n}\r\n","E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\helpers\\serverInteraction.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\store\\actions\\actions.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\components\\index.jsx",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\dbr.js",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\components\\BarcodeScanner.js",[],"E:\\hacktiv8\\Phase-3\\Final Project\\paket-pintar-admin-client\\src\\components\\Navbar.jsx",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":4,"column":3,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":7,"column":3,"nodeType":"159","messageId":"160","endLine":7,"endColumn":11},{"ruleId":"157","severity":1,"message":"162","line":8,"column":3,"nodeType":"159","messageId":"160","endLine":8,"endColumn":7},{"ruleId":"157","severity":1,"message":"163","line":10,"column":9,"nodeType":"159","messageId":"160","endLine":10,"endColumn":17},{"ruleId":"157","severity":1,"message":"164","line":15,"column":9,"nodeType":"159","messageId":"160","endLine":15,"endColumn":21},{"ruleId":"157","severity":1,"message":"165","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":26},{"ruleId":"157","severity":1,"message":"166","line":17,"column":11,"nodeType":"159","messageId":"160","endLine":17,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":15,"column":6,"nodeType":"169","endLine":15,"endColumn":8,"suggestions":"170"},{"ruleId":"157","severity":1,"message":"171","line":17,"column":9,"nodeType":"159","messageId":"160","endLine":17,"endColumn":24},{"ruleId":"157","severity":1,"message":"161","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"172","line":22,"column":6,"nodeType":"169","endLine":22,"endColumn":8,"suggestions":"173"},{"ruleId":"157","severity":1,"message":"174","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":19},{"ruleId":"157","severity":1,"message":"175","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":20},{"ruleId":"157","severity":1,"message":"176","line":10,"column":9,"nodeType":"159","messageId":"160","endLine":10,"endColumn":17},{"ruleId":"157","severity":1,"message":"177","line":11,"column":11,"nodeType":"159","messageId":"160","endLine":11,"endColumn":19},{"ruleId":"157","severity":1,"message":"174","line":1,"column":20,"nodeType":"159","messageId":"160","endLine":1,"endColumn":29},{"ruleId":"157","severity":1,"message":"176","line":10,"column":9,"nodeType":"159","messageId":"160","endLine":10,"endColumn":17},{"ruleId":"157","severity":1,"message":"178","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":21},{"ruleId":"167","severity":1,"message":"179","line":16,"column":6,"nodeType":"169","endLine":16,"endColumn":8,"suggestions":"180"},{"ruleId":"157","severity":1,"message":"181","line":18,"column":9,"nodeType":"159","messageId":"160","endLine":18,"endColumn":26},{"ruleId":"157","severity":1,"message":"182","line":2,"column":23,"nodeType":"159","messageId":"160","endLine":2,"endColumn":34},{"ruleId":"157","severity":1,"message":"178","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":21},{"ruleId":"167","severity":1,"message":"172","line":17,"column":6,"nodeType":"169","endLine":17,"endColumn":8,"suggestions":"183"},{"ruleId":"157","severity":1,"message":"184","line":102,"column":7,"nodeType":"159","messageId":"160","endLine":102,"endColumn":12},{"ruleId":"157","severity":1,"message":"185","line":21,"column":9,"nodeType":"159","messageId":"160","endLine":21,"endColumn":13},{"ruleId":"157","severity":1,"message":"185","line":33,"column":9,"nodeType":"159","messageId":"160","endLine":33,"endColumn":13},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'access_token' is assigned a value but never used.","'loggerMiddleware' is defined but never used.","'loginSuccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'packages.length'. Either include them or remove the dependency array.","ArrayExpression",["188"],"'claimedPackages' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'packages' and 'users'. Either include them or remove the dependency array.",["189"],"'useEffect' is defined but never used.","'fetchUsers' is defined but never used.","'dispatch' is assigned a value but never used.","'packages' is assigned a value but never used.","'getDateTime' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["190"],"'unclaimedPackages' is assigned a value but never used.","'useDispatch' is defined but never used.",["191"],"'style' is assigned a value but never used.","'time' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"194","fix":"198"},"Update the dependencies array to be: [dispatch, packages.length]",{"range":"199","text":"200"},"Update the dependencies array to be: [packages, users]",{"range":"201","text":"202"},"Update the dependencies array to be: [dispatch]",{"range":"203","text":"204"},{"range":"205","text":"202"},[499,501],"[dispatch, packages.length]",[585,587],"[packages, users]",[615,617],"[dispatch]",[702,704]]